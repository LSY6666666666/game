<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>避开敌人</title>
    <style>
        body {
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            margin: 0;
            background-color: #f0f0f0;
            font-family: Arial, sans-serif;
        }
        #game-container {
            position: relative;
            width: 600px;
            height: 400px;
            border: 2px solid #000;
            background-color: #fff;
            overflow: hidden;
        }
        .player, .enemy {
            position: absolute;
            width: 30px;
            height: 30px;
        }
        .player {
            background-color: #28a745;
        }
        .enemy {
            background-color: #dc3545;
        }
        #score {
            position: absolute;
            top: 10px;
            left: 10px;
            font-size: 20px;
            font-weight: bold;
        }
    </style>
</head>
<body>
    <div id="game-container">
        <div id="score">Score: 0</div>
        <div class="player" id="player"></div>
    </div>
    <script>
        const gameContainer = document.getElementById('game-container');
        const player = document.getElementById('player');
        const scoreDisplay = document.getElementById('score');
        let score = 0;
        let gameInterval;
        let enemyInterval;
        let playerX = gameContainer.clientWidth / 2 - 15;
        let playerY = gameContainer.clientHeight - 50;
        let enemies = [];
        let moveLeft = false;
        let moveRight = false;

        function startGame() {
            player.style.left = `${playerX}px`;
            player.style.top = `${playerY}px`;
            gameInterval = setInterval(updateGame, 20);
            enemyInterval = setInterval(createEnemy, 1000);
            document.addEventListener('keydown', handleKeyDown);
            document.addEventListener('keyup', handleKeyUp);
        }

        function updateGame() {
            score++;
            scoreDisplay.textContent = `Score: ${score}`;
            updateEnemies();
            updatePlayerPosition();
            checkCollision();
        }

        function handleKeyDown(e) {
            if (e.key === 'ArrowLeft') {
                moveLeft = true;
            }
            if (e.key === 'ArrowRight') {
                moveRight = true;
            }
        }

        function handleKeyUp(e) {
            if (e.key === 'ArrowLeft') {
                moveLeft = false;
            }
            if (e.key === 'ArrowRight') {
                moveRight = false;
            }
        }

        function updatePlayerPosition() {
            const speed = 5;
            if (moveLeft && playerX > 0) {
                playerX -= speed;
            }
            if (moveRight && playerX < gameContainer.clientWidth - 30) {
                playerX += speed;
            }
            player.style.left = `${playerX}px`;
        }

        function createEnemy() {
            const enemy = document.createElement('div');
            enemy.classList.add('enemy');
            enemy.style.left = `${Math.random() * (gameContainer.clientWidth - 30)}px`;
            enemy.style.top = `0px`;
            gameContainer.appendChild(enemy);
            enemies.push(enemy);
        }

        function updateEnemies() {
            enemies.forEach((enemy, index) => {
                let enemyY = parseInt(enemy.style.top);
                enemyY += 5;
                if (enemyY > gameContainer.clientHeight) {
                    gameContainer.removeChild(enemy);
                    enemies.splice(index, 1);
                } else {
                    enemy.style.top = `${enemyY}px`;
                }
            });
        }

        function checkCollision() {
            enemies.forEach((enemy) => {
                const enemyRect = enemy.getBoundingClientRect();
                const playerRect = player.getBoundingClientRect();
                if (
                    enemyRect.left < playerRect.right &&
                    enemyRect.right > playerRect.left &&
                    enemyRect.top < playerRect.bottom &&
                    enemyRect.bottom > playerRect.top
                ) {
                    endGame();
                }
            });
        }

        function endGame() {
            clearInterval(gameInterval);
            clearInterval(enemyInterval);
            document.removeEventListener('keydown', handleKeyDown);
            document.removeEventListener('keyup', handleKeyUp);
            alert(`Game Over! Your score is ${score}`);
        }

        startGame();
    </script>
</body>
</html>
